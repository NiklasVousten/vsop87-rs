language: rust
cache: cargo
dist: trusty
sudo: true
os:
  - linux
  - osx
addons:
  apt:
    packages:
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - cmake
      - gcc
      - binutils-dev
      - libiberty-dev
      - zlib1g-dev

# Run builds for all the supported trains
rust:
  - nightly
  - beta
  - stable
  - 1.24.0
  - 1.20.0
  - 1.19.0
  - 1.18.0
  - 1.17.0
  - 1.16.0
  - 1.15.0
  - 1.14.0
  - 1.13.0
  - 1.12.0
  - 1.11.0
  - 1.10.0
  - 1.9.0
  - 1.8.0
  - 1.7.0
  - 1.6.0
  - 1.5.0
  - 1.4.0

# Load clippy and rustfmt
before_script:
  - |
      if [[ "$TRAVIS_OS_NAME" == "linux" && "$TRAVIS_RUST_VERSION" == "stable" ]]; then
        ( rustup component add rustfmt-preview || true );
      fi
  - |
      if [[ "$TRAVIS_RUST_VERSION" == "nightly" ]]; then
        ( ( cargo install clippy && export CLIPPY=true ) || export CLIPPY=false );
      fi
  - export PATH=$PATH:~/.cargo/bin

# The main build
script:
  - cargo build
  - cargo package
  - cargo test
  - cargo doc
  - |
      if [[ "$TRAVIS_RUST_VERSION" == "nightly" && $CLIPPY ]]; then
        cargo clippy
      fi
  - |
      if [[ "$TRAVIS_RUST_VERSION" == "nightly" ]]; then
      cargo bench;
      fi
  - |
      if [[ "$TRAVIS_OS_NAME" == "linux" && "$TRAVIS_RUST_VERSION" == "stable" ]]; then
          cargo fmt -- --write-mode=diff
      fi

# Send coverage reports and upload docs
after_success:
  # Coverage report
  - |
      if [[ "$TRAVIS_OS_NAME" == "linux" && "$TRAVIS_RUST_VERSION" == "stable" ]]; then
        wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
        tar xzf master.tar.gz &&
        cd kcov-master &&
        mkdir build &&
        cd build &&
        cmake .. &&
        make &&
        sudo make install &&
        cd ../.. &&
        rm -rf kcov-master &&
        rm -rf target/debug/*.d &&
        for file in target/debug/vsop87*; do mkdir -p "target/cov/$(basename $file)"; kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done &&
        for file in target/debug/lib-*; do mkdir -p "target/cov/$(basename $file)"; kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done &&
        bash <(curl -s https://codecov.io/bash) &&
        echo "Uploaded code coverage"
      fi

env:
  global:
    - TRAVIS_CARGO_NIGHTLY_FEATURE=""
